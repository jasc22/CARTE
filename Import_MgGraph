# Define the base directory where modules are stored
$BasePath = "C:\MgGraph"

# Get all first-level subdirectories under $BasePath
$Subdirectories = Get-ChildItem -Path $BasePath -Directory

# Initialize arrays to store valid 2.24.0 paths
$ModulePaths = @()
$MicrosoftGraphPath = $null

# Iterate through each subdirectory and check if it contains a '2.24.0' folder
foreach ($Subdir in $Subdirectories) {
    $VersionPath = Join-Path $Subdir.FullName "2.24.0"
    
    if (Test-Path $VersionPath) {
        if ($Subdir.Name -eq "Microsoft.Graph") {
            $MicrosoftGraphPath = $VersionPath  # Store Microsoft.Graph for later
        } else {
            Write-Host "Found: $VersionPath" -ForegroundColor Green
            $ModulePaths += $VersionPath
        }
    } else {
        Write-Host "Skipping (No 2.24.0): $VersionPath" -ForegroundColor Yellow
    }
}

# If no valid paths are found, exit
if ($ModulePaths.Count -eq 0 -and -not $MicrosoftGraphPath) {
    Write-Host "No 2.24.0 directories found under $BasePath!" -ForegroundColor Red
    exit
}

# Function to process module imports
function Import-ModulesFromPath {
    param ($ModulePath)
    
    Write-Host "`nProcessing modules from: $ModulePath`n" -ForegroundColor Cyan

    # Ensure Microsoft.Graph.Authentication is loaded first if it exists
    $AuthModule = Get-ChildItem -Path $ModulePath -Filter "Microsoft.Graph.Authentication.psd1" | Select-Object -First 1
    if ($AuthModule) {
        try {
            Write-Host "Importing authentication module: $($AuthModule.FullName)"
            Import-Module $AuthModule.FullName -Force -Scope Global -ErrorAction Stop
        } catch {
            Write-Host "Failed to import authentication module: $($AuthModule.FullName) - $_" -ForegroundColor Red
        }
    } else {
        Write-Host "Microsoft.Graph.Authentication.psd1 not found in $ModulePath!" -ForegroundColor Yellow
    }

    # Get all other .psd1 and .psm1 files, excluding Microsoft.Graph.Authentication.psd1
    $ModuleFiles = Get-ChildItem -Path $ModulePath -Include "*.psd1", "*.psm1" -Exclude "Microsoft.Graph.Authentication.psd1"

    foreach ($Module in $ModuleFiles) {
        try {
            Write-Host "Importing module: $($Module.FullName)"
            Import-Module $Module.FullName -Force -Scope Global -ErrorAction Stop
        } catch {
            Write-Host "Failed to import module: $($Module.FullName) - $_" -ForegroundColor Red
        }
    }
}

# Process all other modules first
foreach ($ModulePath in $ModulePaths) {
    Import-ModulesFromPath -ModulePath $ModulePath
}

# Load Microsoft.Graph last
if ($MicrosoftGraphPath) {
    Write-Host "`nProcessing Microsoft.Graph last from: $MicrosoftGraphPath`n" -ForegroundColor Magenta
    Import-ModulesFromPath -ModulePath $MicrosoftGraphPath
}

Write-Host "`nAll applicable modules from 2.24.0 subdirectories have been processed!" -ForegroundColor Green
