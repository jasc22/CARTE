$BasePath = "C:\MgGraph"

# Get all module directories containing a 2.24.0 subdirectory
$ModulePaths = Get-ChildItem -Path $BasePath -Directory | ForEach-Object {
    $VersionPaths = Get-ChildItem -Path $_.FullName -Directory | Where-Object { $_.Name -eq "2.24.0" }
    $VersionPaths.FullName
}

foreach ($ModulePath in $ModulePaths) {
    Write-Host "Processing modules in: $ModulePath"

    # Ensure Microsoft.Graph.Authentication is loaded first
    $AuthModule = Get-ChildItem -Path $ModulePath -Filter "Microsoft.Graph.Authentication.psd1" | Select-Object -First 1
    if ($AuthModule) {
        try {
            Write-Host "Importing authentication module: $($AuthModule.FullName)"
            Import-Module $AuthModule.FullName -Force -Scope Global -ErrorAction Stop
        } catch {
            Write-Host "Failed to import authentication module: $($AuthModule.FullName) - $_" -ForegroundColor Red
        }
    } else {
        Write-Host "Microsoft.Graph.Authentication.psd1 not found in $ModulePath!" -ForegroundColor Red
    }

    # Import other .psd1 and .psm1 files, excluding Microsoft.Graph.Authentication.psd1
    $ModuleFiles = Get-ChildItem -Path $ModulePath -Include "*.psd1", "*.psm1" | Where-Object { $_.Name -ne "Microsoft.Graph.Authentication.psd1" }

    foreach ($Module in $ModuleFiles) {
        try {
            Write-Host "Importing module: $($Module.FullName)"
            Import-Module $Module.FullName -Force -Scope Global -ErrorAction Stop
        } catch {
            Write-Host "Failed to import module: $($Module.FullName) - $_" -ForegroundColor Red
        }
    }
}

# Ensure the full Microsoft.Graph module is loaded for dependencies
try {
    Write-Host "Ensuring all Microsoft.Graph modules are loaded."
    Import-Module Microsoft.Graph -Force -Scope Global -ErrorAction Stop
} catch {
    Write-Host "Failed to import Microsoft.Graph module - $_" -ForegroundColor Red
}




$BasePath = "C:\MgGraph"

# Ensure the base path exists
if (-Not (Test-Path $BasePath)) {
    Write-Host "The specified base path '$BasePath' does not exist!" -ForegroundColor Red
    return
}

# Get all module directories containing a 2.24.0 subdirectory
$ModulePaths = Get-ChildItem -Path $BasePath -Directory | ForEach-Object {
    $VersionPaths = Get-ChildItem -Path $_.FullName -Directory | Where-Object { $_.Name -eq "2.24.0" }
    $VersionPaths.FullName
}

